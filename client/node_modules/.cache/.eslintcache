[{"/home/gamefreak/myProjects/RosyTL/client/src/index.js":"1","/home/gamefreak/myProjects/RosyTL/client/src/reportWebVitals.js":"2","/home/gamefreak/myProjects/RosyTL/client/src/App.js":"3","/home/gamefreak/myProjects/RosyTL/client/src/lib/Signup.js":"4","/home/gamefreak/myProjects/RosyTL/client/src/lib/Profile.js":"5","/home/gamefreak/myProjects/RosyTL/client/src/lib/Navbar.js":"6","/home/gamefreak/myProjects/RosyTL/client/src/lib/NewEvent.js":"7","/home/gamefreak/myProjects/RosyTL/client/src/lib/Home.js":"8","/home/gamefreak/myProjects/RosyTL/client/src/lib/About.js":"9","/home/gamefreak/myProjects/RosyTL/client/src/lib/Login.js":"10","/home/gamefreak/myProjects/RosyTL/client/src/lib/ProfileEvents.js":"11"},{"size":500,"mtime":1632157436274,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1632157436276,"results":"14","hashOfConfig":"13"},{"size":2629,"mtime":1637684096469,"results":"15","hashOfConfig":"13"},{"size":2134,"mtime":1637684295947,"results":"16","hashOfConfig":"13"},{"size":2593,"mtime":1633637769054,"results":"17","hashOfConfig":"13"},{"size":2381,"mtime":1634586852693,"results":"18","hashOfConfig":"13"},{"size":2245,"mtime":1634588076823,"results":"19","hashOfConfig":"13"},{"size":2489,"mtime":1633657009670,"results":"20","hashOfConfig":"13"},{"size":869,"mtime":1633656373975,"results":"21","hashOfConfig":"13"},{"size":1573,"mtime":1634586775843,"results":"22","hashOfConfig":"13"},{"size":3743,"mtime":1634587415493,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"zw6h6l",{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"26"},"/home/gamefreak/myProjects/RosyTL/client/src/index.js",[],["51","52"],"/home/gamefreak/myProjects/RosyTL/client/src/reportWebVitals.js",[],"/home/gamefreak/myProjects/RosyTL/client/src/App.js",["53"],"import { BrowserRouter, Route } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport './App.css';\nimport Home from './lib/Home';\nimport Navbar from './lib/Navbar';\nimport Signup from './lib/Signup';\nimport Profile from './lib/Profile';\nimport Login from './lib/Login';\nimport NewEvent from './lib/NewEvent';\nimport About from './lib/About';\n\nfunction App() {\n  const [user, setUser] = useState({});\n  const [events, setEvents] = useState([]);\n  const [homeClicked, setHomeClicked] = useState(true);\n  const [userClicked, setUserClicked] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  useEffect(() => {\n    fetch(\"/data\")\n      .then((r) => r.json())\n      .then(e => setEvents(e))\n\n  }, [homeClicked]);\n\n  useEffect(() => {\n    fetch(`/users/${user.id}`)\n    .then((r) => r.json())\n    .then((res) => setUser(res))\n  }, [userClicked])\n\n  function homeClickCheckered(homeClicked, userClicked) {\n      if (homeClicked === true) {\n        console.log(\"Thanks, bruh\")\n        setHomeClicked(false);\n      }\n\n      if (userClicked === true) {\n        console.log(\"Thanks, dawg\")\n        setUserClicked(false);\n      }\n  }\n\n  homeClickCheckered(homeClicked, userClicked);  \n\n  console.log(isLoggedIn);\n  // console.log(events);\n\n  return (\n    <div style={{ background: 'linear-gradient(white, red)', height: '200'}}>\n\n    <BrowserRouter className=\"App\">\n      <Navbar user={user} setUser={setUser} homeClicked={homeClicked} setHomeClicked={setHomeClicked} setIsLoggedIn={setIsLoggedIn} isLoggedIn={isLoggedIn}/>\n\n      <br/>\n      \n      <Route exact path=\"/\" className=\"Home\">\n        <Home user={user} setUser={setUser} events={events} setEvents={setEvents}/>\n      </Route>\n\n      <Route path=\"/signup\" className=\"Signup\"> \n        <Signup user={user} setUser={setUser} setIsLoggedIn={setIsLoggedIn}/>\n      </Route>\n\n      <Route path=\"/profile\" className=\"Profile\">\n        <Profile user={user} setUser={setUser} event={events} setEvents={setEvents} homeClicked={homeClicked} setHomeClicked={setHomeClicked} userClicked={userClicked} setUserClicked={setUserClicked}/>\n      </Route>\n\n      <Route path=\"/login\" className=\"Login\">\n        <Login user={user} setUser={setUser} setHomeClicked={setHomeClicked} setIsLoggedIn={setIsLoggedIn}/>\n      </Route>\n\n      <Route path=\"/newevent\" className=\"NewEvent\">\n        <NewEvent user={user} homeClicked={homeClicked} setHomeClicked={setHomeClicked} setEvents={setEvents}/>\n      </Route>\n\n      <Route path=\"/about\" className=\"About\">\n        <About/>\n      </Route>\n\n    </BrowserRouter>\n\n    </div>\n  );\n}\n\nexport default App;\n","/home/gamefreak/myProjects/RosyTL/client/src/lib/Signup.js",[],"/home/gamefreak/myProjects/RosyTL/client/src/lib/Profile.js",[],"/home/gamefreak/myProjects/RosyTL/client/src/lib/Navbar.js",["54","55"],"import { NavLink } from 'react-router-dom';\nimport { useHistory } from 'react-router-dom';\nimport Button from '@mui/material/Button';\nimport Stack from '@mui/material/Stack';\nimport YRose from '../IMGs/ToorkyBoi.jpg'\nimport LRose from \"../IMGs/LancyBoi.jpg\"\n\n\nconst Navbar = ( {user, setUser, homeClicked, setHomeClicked, setIsLoggedIn, isLoggedIn} ) => {\n    const history = useHistory();\n\n    function handleLogoutClick() {\n        fetch(\"/logout\", {method: \"DELETE\"}).then((r) => {\n            if (r.ok) {\n                setUser({});\n                setIsLoggedIn(false);\n                history.push(\"/\");\n            }\n        })\n    }\n\n\n    return (\n\n        <Stack alignItems=\"center\">\n\n            <Stack alignItems=\"center\" spacing={1} direction=\"row\">\n                <img src={LRose} height=\"40\" width=\"40\"/>\n                <h1 style={{ color: \"red\", background: '3px solid black'}}>Rosy TL</h1>\n                <img src={YRose} height=\"40\" width=\"40\"/>\n            </Stack>\n\n            <br/>\n                {user.length > 0 ? <p>Welcome, {user.name}</p> : null}\n            <br/>\n\n        <nav className=\"NavBar\">\n\n            <NavLink to=\"/about\">\n                <Button variant=\"outlined\">About</Button>\n            </NavLink>\n\n            <NavLink to=\"/\" onClick={e => setHomeClicked(!homeClicked)}>\n                <Button variant=\"outlined\">Home</Button>\n            </NavLink>\n\n            {isLoggedIn > 0 ? (\n                <NavLink to=\"/newevent\">\n                    <Button variant=\"outlined\">New Entry</Button>\n                </NavLink>\n            ) : null}\n\n            {!isLoggedIn ? (\n            <NavLink to=\"/signup\">\n                <Button variant=\"outlined\">Sign Up</Button>\n            </NavLink>\n            ) : null}\n\n            {isLoggedIn ? (\n            <NavLink to=\"/profile\">\n                <Button variant=\"outlined\">Profile</Button>\n            </NavLink>\n            ) : null}\n\n            {!isLoggedIn ? (\n                <NavLink to=\"/login\">\n                    <Button variant=\"outlined\">Login</Button>\n                </NavLink>\n            ) : null}\n\n            {isLoggedIn > 0 ? (\n                <NavLink to=\"/\">\n                    <Button variant=\"outlined\" onClick={handleLogoutClick}>Logout</Button>\n                </NavLink>\n            ) : null}\n\n        </nav>\n\n        </Stack>\n\n    )\n\n}\n\nexport default Navbar;","/home/gamefreak/myProjects/RosyTL/client/src/lib/NewEvent.js",[],"/home/gamefreak/myProjects/RosyTL/client/src/lib/Home.js",["56"],"import React from \"react\"\nimport { Chrono } from \"react-chrono\"\nimport { useState } from \"react\"\n\nconst Home = ( {events, user} ) => {\n  const [content, setContent] = useState(\"\");\n\n    const sortedEvents = events.sort(function(a,b) { return a.title - b.title })\n\n    let eventArray = [];\n\n    sortedEvents.forEach(e => { \n      const event = {\n              id: e.id,\n              user_id: e.user_id,\n              title: e.title,\n              cardTitle: e.cardTitle,\n              cardSubtitle: e.cardSubtitle,\n              cardDetailedText: e.cardDetailedText,\n              media: {\n                type: \"IMAGE\",\n                source: {\n                  url: e.url\n                }\n              }\n          }\n          eventArray.push(event)\n    } )\n\n    function handleCommentSubmit(e, event) {\n      console.log(content)\n      e.preventDefault()\n      fetch(\"/comments\", {method: \"POST\", headers: {\n          'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n                          user_id: user.id,\n                          event_id: event.id,\n                          content: content\n                        }),\n    }).then(r => r.json())\n    }\n\n    function handleCommentChange(e) {\n      setContent(e.target.value)\n    }\n\n    const eventComments = sortedEvents.map(event => {\n      let commentCard = \n      <div>\n        <p>{event.cardDetailedText}</p>\n        <h5>Comments:</h5>\n        {event.comments.length > 0 ? event.comments.map((comment) => {return <p>{comment.content}</p>}) : <p>No comments here</p>}\n        {Object.keys(user).length > 0 ? <form onSubmit={e => handleCommentSubmit(e, event)}>\n          <input type=\"text\" placeholder=\"Add your comments here\" onChange={handleCommentChange}/>\n          <button type=\"submit\">Add comment</button>\n        </form> : null}\n      </div>\n      return commentCard;\n  }\n  )\n\n    return ( \n        <div style={{ width: \"800\", height: \"700\"}}>\n            {events.length > 1 ? \n              <Chrono items={eventArray} cardHeight=\"345\" mode=\"HORIZONTAL\" allowDynamicUpdate=\"true\" hideControls=\"true\" theme={{ \n                primary: \"white\",\n                secondary: \"red\",\n                cardBgColor: \"\",\n                cardForeColor: \"\",\n                titleColor: \"white\"\n              }}>\n                {/* {eventComments} */}\n              </Chrono> : <p>Loadin................................................................</p>}\n        </div>\n    )\n}\n\nexport default Home;","/home/gamefreak/myProjects/RosyTL/client/src/lib/About.js",[],"/home/gamefreak/myProjects/RosyTL/client/src/lib/Login.js",[],"/home/gamefreak/myProjects/RosyTL/client/src/lib/ProfileEvents.js",["57"],"import { useHistory } from 'react-router-dom'\nimport { useState } from 'react'\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport Stack from '@mui/material/Stack';\nimport Container from '@mui/material/Container';\n \nfunction ProfileEvents( { user, setHomeClicked, setUserClicked } ) {\n    const history = useHistory();\n    const [userEvents, setUserEvents] = useState(user.events);\n    const [eventModding, setEventModding] = useState(false);\n    const [title, setTitle] = useState(\"\");\n    const [cardTitle, setCardTitle] = useState(\"\");\n    const [cardSubtitle, setCardSubtitle] = useState(\"\");\n    const [cardDetailedText, setCardDetailedText] = useState(\"\");\n    const [url, setUrl] = useState(\"\");\n\n    function handleEventDelete(e, event) {\n        console.log(event)\n        e.preventDefault();\n        fetch(`events/${event.id}`, {\n            method: \"DELETE\",\n        })\n        .then(() => {\n                    setUserClicked(true);\n                    setHomeClicked(true)\n                    history.push(\"/\")})\n    }\n\n    function handleEventUpdate(e, event) {\n        e.preventDefault();\n        fetch(`events/${event.id}`, {\n            method: \"PATCH\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                title,\n                cardTitle,\n                cardSubtitle,\n                cardDetailedText,\n                url,\n                user_id: user.id\n            }),\n        })\n        .then(r => r.json())\n        .then(() => {setHomeClicked(true)\n                    setUserClicked(true)})\n        .then(() => history.push(\"/\"));\n    }\n\n    function handleModding() {\n        setEventModding(!eventModding)\n    }\n\n    console.log(userEvents);\n\n    return (\n        <Container>\n            {userEvents.map((event) => {\n                const eventInfo =\n                <Stack>\n                    <h3>{event.title}</h3>\n                    <p>{event.cardTitle}</p>\n                    <p>{event.cardSubtitle}</p>\n                    <p>{event.cardDetailedText}</p>\n                    <p>{event.url}</p>\n                    <br/>\n                    <Button variant=\"primary\" onClick={handleModding}>{!eventModding ? \"Modify Entry\" : \"End Modifying\"}</Button>\n                    <br/>\n                    \n                    {eventModding ? <form onSubmit={e => handleEventUpdate(e, event)}>\n                        <Stack alignItems=\"center\" spacing={1}>\n                            <TextField type=\"text\" placeholder=\"Update Year\" value={title} onChange={e => setTitle(e.target.value)}/>\n                            <TextField type=\"text\" placeholder=\"Update Title\" value={cardTitle} onChange={e => setCardTitle(e.target.value)}/>\n                            <TextField type=\"text\" placeholder=\"Update Event Date\" value={cardSubtitle} onChange={e => setCardSubtitle(e.target.value)}/>\n                            <TextField multiline type=\"text\" placeholder=\"Update Content\" value={cardDetailedText} onChange={e => setCardDetailedText(e.target.value)}/>\n                            <TextField type=\"text\" placeholder=\"Update Picture\" value={url} onChange={e => setUrl(e.target.value)}/>\n                            <br/>\n                            <Button variant=\"contained\"type=\"submit\">Submit Update</Button>\n                            <br/>\n                            <Button variant=\"contained\"onClick={e => handleEventDelete(e, event)}>Delete Entry</Button>\n                            </Stack>\n                        </form> : null}\n\n                </Stack>\n                return eventInfo\n            })}\n        </Container>\n    )\n}\n\nexport default ProfileEvents;",{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":30,"column":6,"nodeType":"64","endLine":30,"endColumn":19,"suggestions":"65"},{"ruleId":"66","severity":1,"message":"67","line":28,"column":17,"nodeType":"68","endLine":28,"endColumn":58},{"ruleId":"66","severity":1,"message":"67","line":30,"column":17,"nodeType":"68","endLine":30,"endColumn":58},{"ruleId":"69","severity":1,"message":"70","line":48,"column":11,"nodeType":"71","messageId":"72","endLine":48,"endColumn":24},{"ruleId":"69","severity":1,"message":"73","line":10,"column":24,"nodeType":"71","messageId":"72","endLine":10,"endColumn":37},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user.id'. Either include it or remove the dependency array.","ArrayExpression",["76"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'eventComments' is assigned a value but never used.","Identifier","unusedVar","'setUserEvents' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"77","fix":"78"},"Update the dependencies array to be: [user.id, userClicked]",{"range":"79","text":"80"},[874,887],"[user.id, userClicked]"]