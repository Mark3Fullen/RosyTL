{"ast":null,"code":"var _jsxFileName = \"/home/gamefreak/myProjects/RosyTL/client/src/lib/Home.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Chrono } from \"react-chrono\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = ({\n  events,\n  user\n}) => {\n  _s();\n\n  const [content, setContent] = useState(\"\");\n  const sortedEvents = events.sort(function (a, b) {\n    return a.title - b.title;\n  });\n  let eventArray = [];\n  sortedEvents.forEach(e => {\n    const event = {\n      id: e.id,\n      user_id: e.user_id,\n      title: e.title,\n      cardTitle: e.cardTitle,\n      cardSubtitle: e.cardSubtitle,\n      cardDetailedText: e.cardDetailedText,\n      media: {\n        type: \"IMAGE\",\n        source: {\n          url: e.url\n        }\n      }\n    };\n    eventArray.push(event);\n  });\n\n  function handleCommentSubmit(e, event) {\n    console.log(content);\n    e.preventDefault();\n    fetch(\"/comments\", {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        user_id: user.id,\n        event_id: event.id,\n        content: content\n      })\n    }).then(r => r.json());\n  }\n\n  function handleCommentChange(e) {\n    setContent(e.target.value);\n  }\n\n  const eventComments = sortedEvents.map(event => {\n    let commentCard = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: event.cardDetailedText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Comments:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), event.comments.length > 0 ? event.comments.map(comment => {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: comment.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 78\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No comments here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 107\n      }, this), Object.keys(user).length > 0 ? /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => handleCommentSubmit(e, event),\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Add your comments here\",\n          onChange: handleCommentChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 41\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this);\n\n    return commentCard;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"800\",\n      height: \"700\"\n    },\n    children: events.length > 1 ? /*#__PURE__*/_jsxDEV(Chrono, {\n      items: eventArray,\n      cardHeight: \"345\",\n      mode: \"HORIZONTAL\",\n      allowDynamicUpdate: \"true\",\n      hideControls: \"true\",\n      theme: {\n        primary: \"white\",\n        secondary: \"red\",\n        cardBgColor: \"\",\n        cardForeColor: \"\",\n        titleColor: \"white\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 15\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loadin................................................................\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 27\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Home, \"KPwtwb4lt1NZxOwnjhyyIoKb9lQ=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/gamefreak/myProjects/RosyTL/client/src/lib/Home.js"],"names":["React","Chrono","useState","Home","events","user","content","setContent","sortedEvents","sort","a","b","title","eventArray","forEach","e","event","id","user_id","cardTitle","cardSubtitle","cardDetailedText","media","type","source","url","push","handleCommentSubmit","console","log","preventDefault","fetch","method","headers","body","JSON","stringify","event_id","then","r","json","handleCommentChange","target","value","eventComments","map","commentCard","comments","length","comment","Object","keys","width","height","primary","secondary","cardBgColor","cardForeColor","titleColor"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport { Chrono } from \"react-chrono\"\nimport { useState } from \"react\"\n\nconst Home = ( {events, user} ) => {\n  const [content, setContent] = useState(\"\");\n\n    const sortedEvents = events.sort(function(a,b) { return a.title - b.title })\n\n    let eventArray = [];\n\n    sortedEvents.forEach(e => { \n      const event = {\n              id: e.id,\n              user_id: e.user_id,\n              title: e.title,\n              cardTitle: e.cardTitle,\n              cardSubtitle: e.cardSubtitle,\n              cardDetailedText: e.cardDetailedText,\n              media: {\n                type: \"IMAGE\",\n                source: {\n                  url: e.url\n                }\n              }\n          }\n          eventArray.push(event)\n    } )\n\n    function handleCommentSubmit(e, event) {\n      console.log(content)\n      e.preventDefault()\n      fetch(\"/comments\", {method: \"POST\", headers: {\n          'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n                          user_id: user.id,\n                          event_id: event.id,\n                          content: content\n                        }),\n    }).then(r => r.json())\n    }\n\n    function handleCommentChange(e) {\n      setContent(e.target.value)\n    }\n\n    const eventComments = sortedEvents.map(event => {\n      let commentCard = \n      <div>\n        <p>{event.cardDetailedText}</p>\n        <h5>Comments:</h5>\n        {event.comments.length > 0 ? event.comments.map((comment) => {return <p>{comment.content}</p>}) : <p>No comments here</p>}\n        {Object.keys(user).length > 0 ? <form onSubmit={e => handleCommentSubmit(e, event)}>\n          <input type=\"text\" placeholder=\"Add your comments here\" onChange={handleCommentChange}/>\n          <button type=\"submit\">Add comment</button>\n        </form> : null}\n      </div>\n      return commentCard;\n  }\n  )\n\n    return ( \n        <div style={{ width: \"800\", height: \"700\"}}>\n            {events.length > 1 ? \n              <Chrono items={eventArray} cardHeight=\"345\" mode=\"HORIZONTAL\" allowDynamicUpdate=\"true\" hideControls=\"true\" theme={{ \n                primary: \"white\",\n                secondary: \"red\",\n                cardBgColor: \"\",\n                cardForeColor: \"\",\n                titleColor: \"white\"\n              }}>\n                {/* {eventComments} */}\n              </Chrono> : <p>Loadin................................................................</p>}\n        </div>\n    )\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}